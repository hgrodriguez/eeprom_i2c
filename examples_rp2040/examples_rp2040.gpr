with "edc_client.gpr";
with "itsybitsy_rp2040_bsp.gpr";
with "pico_bsp.gpr";
with "tiny_rp2040_bsp.gpr";

with "config/examples_rp2040_config.gpr";

with "../eeprom_i2c.gpr";

project Examples_Rp2040 is

   for Runtime ("Ada") use "zfp-cortex-m0p";
   for Target use "arm-eabi";

   for Source_Dirs use ("src");
   for Object_Dir use "obj";
   for Create_Missing_Dirs use "True";
   for Exec_Dir use "bin";
   for Main use ("pico_read_one_byte.adb", "pico_write_one_byte.adb", "pico_write_full_and_check.adb");

   type Enabled_Kind is ("enabled", "disabled");
   Compile_Checks : Enabled_Kind := External ("EEPROM_I2C_EXAMPLES_COMPILE_CHECKS", "disabled");
   Runtime_Checks : Enabled_Kind := External ("EEPROM_I2C_EXAMPLES_RUNTIME_CHECKS", "disabled");
   Style_Checks : Enabled_Kind := External ("EEPROM_I2C_EXAMPLES_STYLE_CHECKS", "disabled");
   Contracts_Checks : Enabled_Kind := External ("EEPROM_I2C_EXAMPLES_CONTRACTS", "disabled");

   type Build_Kind is ("debug", "optimize");
   Build_Mode : Build_Kind := External ("EEPROM_I2C_EXAMPLES_BUILD_MODE", "optimize");

   Compile_Checks_Switches := ();
   case Compile_Checks is
      when "enabled" =>
         Compile_Checks_Switches :=
           ("-gnatwa",  -- All warnings
            "-gnatVa",  -- All validity checks
            "-gnatwe"); -- Warnings as errors
      when others => null;
   end case;

   Runtime_Checks_Switches := ();
   case Runtime_Checks is
      when "enabled" => null;
      when others =>
         Runtime_Checks_Switches :=
           ("-gnatp"); -- Suppress checks
   end case;

   Style_Checks_Switches := ();
   case Style_Checks is
      when "enabled" =>
         Style_Checks_Switches :=
           ("-gnatyg",   -- GNAT Style checks
            "-gnaty-d",  -- Disable no DOS line terminators
            "-gnatyM80", -- Maximum line length
            "-gnatyO");  -- Overriding subprograms explicitly marked as such
      when others => null;
   end case;

   Contracts_Switches := ();
   case Contracts_Checks is
      when "enabled" =>
         Contracts_Switches :=
           ("-gnata"); --  Enable assertions and contracts
      when others => null;
   end case;

   Build_Switches := ();
   case Build_Mode is
      when "optimize" =>
         Build_Switches := ("-O3",     -- Optimization
                            "-gnatn"); -- Enable inlining
      when "debug" =>
         Build_Switches := ("-g",   -- Debug info
                            "-Og"); -- No optimization
   end case;

   package Compiler is
      for Default_Switches ("Ada") use
        Compile_Checks_Switches &
        Build_Switches &
        Runtime_Checks_Switches &
        Style_Checks_Switches &
        Contracts_Switches &
          ("-Og",
           "-g",
           "-gnatwa",       --  All warnings
           "-gnatwl",       --  Elaboration warnings
           "-gnatVa",       --  Validity checks
           "-gnatyg",       --  Style checks
           "-gnatyM120",    --  Line length
           "-gnatyO",       --  Overriding subprograms must be explicitly marked
           "-gnatQ",        --  Keep going after errors
           "-gnatw.X",      --  Hide No_Exception_Propagation warnings
           "-gnatwB",       --  Hide Warn_On_Bad_Fixed_Value
           "-fstack-usage", --  Output stack usage information
           "-ffunction-sections",
           "-fdata-sections");
     for Local_Configuration_Pragmas use "gnat.adc";
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Linker is
      for Default_Switches ("Ada") use
          Pico_BSP.Linker_Switches;
--          ("-Wl,--print-memory-usage,--gc-sections");
   end Linker;

end Examples_Rp2040;
